function makemkdocs(build)
    site_name = "Docile.jl"
    repo_url = "https://github.com/MichaelHatherly/Docile.jl"
    site_description = "Julia package documentation system."
    site_author = "Michael Hatherly"
    theme = "readthedocs"
    docs_dir = joinpath(splitdir(Base.source_dir())[end], build)

    yml = """# generated by Docile
    site_name:           $site_name 
    repo_url:            $repo_url
    site_description:    $site_description
    site_author:         $site_author
    theme:               $theme
    docs_dir:            $docs_dir

    markdown_extensions:
      - extra
      - tables
      - fenced_code
    extra_css:
      - Docile.css
    extra_javascript:
      - https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML
      - mathjaxhelper.js

    $(pages(build, site_name))
    """
    cd(joinpath(Base.source_dir(), build)) do
        open("Docile.css", "w") do f
            write(f, """\
                div.wy-menu-vertical ul.current li.toctree-l3 a {
                  font-weight: bold;
                }
                """)
        end
        open("mathjaxhelper.js", "w") do f
            write(f, """\
                MathJax.Hub.Config({
                  "tex2jax": { inlineMath: [ [ '\$', '\$' ] ] }
                });
                MathJax.Hub.Config({
                  config: ["MMLorHTML.js"],
                  jax: ["input/TeX", "output/HTML-CSS", "output/NativeMML"],
                  extensions: ["MathMenu.js", "MathZoom.js"]
                });
                """)
        end
    end

    open(joinpath(splitdir(Base.source_dir())[1], "mkdocs.yml"), "w") do f
        write(f, yml)
    end
end

function pages(build, site_name)
    b = IOBuffer()
    println(b, "pages:")
    cd(joinpath(Base.source_dir(), build)) do
        # TODO this should happen earlier
        if !isfile("../src/index.md") && isfile("../../README.md")
            cp("../../README.md", "index.md", remove_destination=true)
        end
        isfile("index.md") && println(b, "- ", site_name, ": ", "index.md")

        dir_pages(b)
    end
    takebuf_string(b)
end

function dir_pages(io::IO; dir="", indent=0)
    for fn in readdir()
        if isdir(fn)
            cd(fn) do
                println(io, " " ^ indent, "- ", title(fn), ":")
                dir_pages(io; dir=joinpath(dir, fn), indent=indent+2)
            end
        else
            fn_page(io, fn, dir, indent)
        end
    end
end

function fn_page(io::IO, fn, dir, indent)
    splitext(fn)[end] in (".md", ".markdown") || return
    indent == 0 && fn == "index.md" && return
    println(io, " " ^ indent, "- ", title(fn), ": ", joinpath(dir, fn))
end

function title(fn)
    # TODO capitalize
    splitext(splitdir(fn)[end])[1]
end

